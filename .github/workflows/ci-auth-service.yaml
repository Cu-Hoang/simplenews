name: ci-auth-service
on:
  workflow_dispatch:

  push:
    branches:
      - feature/**
    paths:
      - apps/auth-service/**
      - "!apps/auth-service/README.md"

  pull_request:
    branches:
      - dev
      - main
    paths:
      - apps/auth-service/**
      - "!apps/auth-service/README.md"

jobs:
  build-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['22.14.0']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version}}
        cache: npm

    - name: Check Node.js version
      run: |
        node_version=$(node --version | sed 's/v//')
        required_version=$(node -p "require('./package.json').engines.node")
        if [[ ! "$node_version" == "$required_version" ]]; then
          echo "Error: Node.js version $node_version does not match required version $required_version"
          exit 1
        fi

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Check security vulnerabilities
      run: npm audit --audit-level=high

    - name: Build project
      run: |
        npx nx sync
        npx nx build common
        npx nx build auth-service

  docker:
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' }}
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get SHA 
        id: get_sha
        run: |
          SHA=$(git log -n 1 --pretty=format:%h -- apps/auth-service)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          dockerfile: ./Dockerfile.dockerfile
          build-args: |
            SERVICE=auth-service
            HTTP_PORT=3002
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ steps.get_sha.outputs.sha }}
            ${{ secrets.DOCKER_USERNAME }}/auth-service:main