services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.dockerfile
      args:
        - SERVICE=api-gateway
    container_name: api-gateway
    ports:
      - 3000:3000
    env_file:
      - apps/api-gateway/.env
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      - postgres
      - mongodb

  user-service:
    build:
      context: .
      dockerfile: Dockerfile.dockerfile
      args:
        - SERVICE=user-service
    container_name: user-service
    ports:
      - 3001:3001
    env_file:
      - apps/user-service/.env
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      - postgres
      - mongodb

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.dockerfile
      args:
        - SERVICE=auth-service
    container_name: auth-service
    ports:
      - 3002:3002
    env_file:
      - apps/auth-service/.env
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      - postgres
      - mongodb

  article-service:
    build:
      context: .
      dockerfile: Dockerfile.dockerfile
      args:
        - SERVICE=article-service
    container_name: article-service
    ports:
      - 3003:3003
    env_file:
      - apps/article-service/.env
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      - postgres
      - mongodb

  comment-service:
    build:
      context: .
      dockerfile: Dockerfile.dockerfile
      args:
        - SERVICE=comment-service
    container_name: comment-service
    ports:
      - 3004:3004
    env_file:
      - apps/comment-service/.env
    environment:
      NODE_ENV: production
    restart: unless-stopped
    depends_on:
      - postgres
      - mongodb

  postgres:
    image: postgres:17.4-bookworm
    environment:
     POSTGRES_USER: ${POSTGRES_USER}
     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
    - .env
    ports:
      - '5432:5432'
    volumes:
    - postgres:/var/lib/postgresql/data
    - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql 
    restart: always

  mongodb:
    image: mongo:latest
    environment:
     MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
     MONGO_INITDB_DATABASE: ${MONGO_DB}
    env_file:
    - .env
    ports:
      - '27017:27017'
    volumes:
    - mongodb:/data/db
    restart: always

volumes:
  postgres:
    driver: local
  mongodb:
    driver: local